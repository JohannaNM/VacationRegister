@model PaginatedList<VacationRegister.Models.Leave>

@{
    ViewData["Title"] = "Index";
}

<h1>Leave requests</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>
 <form asp-controller="Leaves" asp-action="Index" method="get">
    <div>
        <p>
            <input type="text" name="SearchString" placeholder="Enter first or last name" value="@ViewData["CurrentFilter"]" />
            <input type="date" name="start" />
            <input type="date" name="end" />
            <input type="submit" value="Filter" class="btn btn-primary" /> 
        </p>
    </div>
</form>
<table class="table table-bordered table-hover">
    <thead class="table-success">
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Employee</a>
            </th>
            <th>
                Type of leave
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">From</a>
            </th>
            <th>
                To
            </th>
            <th>
                Notes
            </th>
            <th>
                Days
            </th>
            <th>
                Created
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.Fullname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeaveType.TypeofLeave)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeaveNotes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiffInDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateDate)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.LeaveId" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit!"><i class="bi bi-pencil-square"></i></a>
                    <a asp-action="Details" asp-route-id="@item.LeaveId" class="btn btn-success btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Details"><i class="bi bi-info-square"></i></a> 
                    <a asp-action="Delete" asp-route-id="@item.LeaveId" class="btn btn-danger btn-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete"><i class="bi bi-trash"></i></a> 
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
<a asp-action="Index" class="btn btn-outline-primary">Back to Full List</a>
